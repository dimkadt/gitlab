---
type: install
version: 1.4
id: gitlab-ci-cd
baseUrl: https://raw.githubusercontent.com/jelastic-jps/gitlab/master
description:
  text: GitLab Server + Container Registry + Build Nodes (Runners)
  short: GitLab DevOps Package
logo: /images/gitlab-logo.png
name: GitLab DevOps
targetRegions:
  type: vz7

settings:
  fields:
    - type: checkbox
      name: le-addon
      caption: Install Let's Encrypt Certificates Addon
      value: false
    
globals:
  DB_USER: gitlab-${fn.password(5)}
  DB_PASSWORD: ${fn.password(32)}
  RUNNER_TOKEN: ${fn.password(32)}
  GITLAB_SECRETS_BASE: ${fn.password(64)}
  ROOT_PASSWORD: ${fn.password(16)}
  HTTP_SECRET: ${fn.password(32)}
  REPO_URL: https://github.com/jelastic/docker-gitlab.git
  DEPLOY_HOOK: /root/deployLE.sh
  UNDEPLOY_HOOK: /root/undeployLE.sh
  CERTS: /srv/docker/gitlab/certs
  RUN_RUNNER: |-
    docker run -d --privileged --name gitlab-runner --restart always \
      -v /var/run/docker.sock:/var/run/docker.sock \
      -v /srv/docker/gitlab-runner:/etc/gitlab-runner:shared \
      gitlab/gitlab-runner &>> /var/log/run.log
  
nodes:
- count: 1
  cloudlets: 32
  image: jelastic/docker-ce
  nodeGroup: cp
  displayName: GitLab Server
  extip: true
  volumes:
  - /srv/docker/gitlab
  - /root
  env:
    JELASTIC_EXPOSE: 10080
    RUNNER_TOKEN: ${globals.RUNNER_TOKEN}
    GITLAB_SECRETS_BASE: ${globals.GITLAB_SECRETS_BASE}
    ROOT_PASSWORD: ${globals.ROOT_PASSWORD}
    HTTP_SECRET: ${globals.HTTP_SECRET}
    DB_USER: ${globals.DB_USER}
    DB_PASSWORD: ${globals.DB_PASSWORD}
    USER_EMAIL: ${user.email}
  startService: false

- count: 1
  cloudlets: 32
  image: jelastic/docker-ce
  nodeGroup: runner
  displayName: Runners
  links: cp:gitlab
  env: 
    RUNNER_TOKEN: ${globals.RUNNER_TOKEN}
    DOCKER_IMAGE: docker:stable
  volumes:
  - /srv/docker/gitlab-runner/certs
  volumeMounts:
    /srv/docker/gitlab-runner/certs:
      sourcePath: ${globals.CERTS}
      sourceNodeGroup: cp
      readOnly: true

skipNodeEmails: true  

onBeforeServiceScaleOut[runner]:
  forEach(event.response.nodes):
    - set-runner-ssl:
        id: ${@i.id}
        
onAfterServiceScaleOut[runner]:
  forEach(event.response.nodes):
    - register-runner:
        id: ${@i.id}
        
onInstall:
  - add-env-vars
  - install-ssl
  - deploy
  - register-runner:
      id: runner
  - if (${settings.le-addon}): installLE
  
actions:
  add-env-vars:
    - api: env.control.AddContainerEnvVars
      nodeGroup: cp
      vars: {"GITLAB_HOST": "${env.domain}", "REGISTRY_HOST": "${env.domain}"}
    - api: env.control.AddContainerEnvVars
      nodeGroup: runner
      vars: {"CI_SERVER_URL": "https://${env.domain}/ci"}
    - api: env.control.ExecDockerRunCmd
      nodeId: ${nodes.cp.first.id}

  install-ssl:
    - cmd[cp]: |-
        mkdir -p ${globals.CERTS}
        cd ${globals.CERTS}
        openssl req -nodes -newkey rsa:4096 -keyout registry-auth.key -out registry-auth.csr -subj "/CN=${env.domain}" &>> /var/log/run.log
        openssl x509 -in registry-auth.csr -out registry-auth.crt -req -signkey registry-auth.key -days 3650 &>> /var/log/run.log
        openssl dhparam -out dhparam.pem 2048 &>> /var/log/run.log
        cp ${globals.CERTS}/registry-auth.crt ${globals.CERTS}/ca.crt

    - set-runner-ssl:
        id: runner
        
  set-runner-ssl:
    cmd[${this.id}]: |-
      yum install ca-certificates -y
      update-ca-trust force-enable
      while [ ! -f /srv/docker/gitlab-runner/certs/ca.crt ]; do ls -l /srv/docker/gitlab-runner/certs; mount | grep certs; sleep 2; done
      cp /srv/docker/gitlab-runner/certs/ca.crt /etc/pki/ca-trust/source/anchors/
      update-ca-trust extract

  register-runner:
    cmd[${this.id}]: |-
      until docker run --rm --privileged --name gitlab-runner \
      -v /var/run/docker.sock:/var/run/docker.sock \
      -v /srv/docker/gitlab-runner:/etc/gitlab-runner:shared \
      gitlab/gitlab-runner register \
      --non-interactive \
      --executor "docker" \
      --docker-image "$DOCKER_IMAGE" \
      --docker-volumes /var/run/docker.sock:/var/run/docker.sock \
      --docker-privileged \
      --url "$CI_SERVER_URL" \
      --registration-token "$RUNNER_TOKEN" \
      --description "docker-runner" \
      --tag-list "" \
      --run-untagged \
      --locked="false" &>> /var/log/run.log
      do
        sleep 2;
      done

      ${globals.RUN_RUNNER}
      
  deploy:
    cmd[cp]: |-
      git clone ${globals.REPO_URL} gitlab &>> /var/log/run.log
      cd gitlab && docker-compose up -d &>> /var/log/run.log

  installLE:
    - cmd[cp]: |-
        dir=${globals.CERTS}_self
        [ ! -d "$dir" ] && { mkdir -p $dir; yes | cp ${globals.CERTS}/* $dir; }
        printf '#!/bin/bash
        mkdir -p $(dirname ${globals.DEPLOY_HOOK})
        #wget https://letsencrypt.org/certs/lets-encrypt-x3-cross-signed.pem -O ${globals.CERTS}/ca.crt
        wget https://letsencrypt.org/certs/fakelerootx1.pem -O ${globals.CERTS}/ca.crt
        yes | cp -f /var/lib/jelastic/keys/fullchain.pem ${globals.CERTS}/registry-auth.crt
        yes | cp -f /var/lib/jelastic/keys/privkey.pem ${globals.CERTS}/registry-auth.key
        service docker restart' > ${globals.DEPLOY_HOOK}
        
        printf '#!/bin/bash
        mkdir -p $(dirname ${globals.UNDEPLOY_HOOK})
        yes | cp -f ${globals.CERTS}_self/* ${globals.CERTS}
        service docker restart' > ${globals.UNDEPLOY_HOOK}        
        
    - install:
        jps: https://raw.githubusercontent.com/SlavaKatiukha/lets-encrypt/hooks/manifest.jps?_r=${fn.random}
        nodeGroup: cp
        settings:
          deployHook: ${baseUrl}/scripts/deployHook.js?_r=${fn.random}
          deployHookType: js
          undeployHook: ${baseUrl}/scripts/deployHook.js?_r=${fn.random}
          undeployHookType: js
          _customDomains: ${env.domain}
          
    - cmd[runner]: |-
        cp /srv/docker/gitlab-runner/certs/ca.crt /etc/pki/ca-trust/source/anchors/
        update-ca-trust extract
        service docker restart
        
  update:
    - cmd[cp]: |-
        cd gitlab && git pull origin master &>> /var/log/run.log
        docker-compose up -d &>> /var/log/run.log
    - cmd[runner]: |-
        docker rm -f gitlab-runner
        ${globals.RUN_RUNNER}

success: |
    GitLab URL: [https://${env.domain}](https://${env.domain})  
    User: root  
    Password: ${globals.ROOT_PASSWORD} 
